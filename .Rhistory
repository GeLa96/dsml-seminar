```{r setup, include=FALSE}
source("getUnctadCPI.R") # to get CPI
library(flexdashboard)
library(shiny)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
library(curl)
library(data.table)
if (file.exists("secrets.R")) source("secrets.R") #
options(scipen = 999)
options(bitmapType="cairo"); options(warn=-1)
# ==========================
# 1) LOAD DATA
# ==========================
load("~/Data")
firstYear <- min(data$Year, na.rm = TRUE)
library(tibble)
clientId <- "70e80d59-00eb-4e26-b51e-c459d12aa6d8"
clientSecret <- "uFieZejhm91ftgBfktJdgZObAy79BdQeINHAt/h49zY="
cpi_index <- getUnctadCpiData(1950:2040, "0001", clientId, clientSecret, growthRate = TRUE)
head(cpi_index)
# ==========================
# 1) LOAD DATA
# ==========================
#load("~/Data")
data <- read.csv("US.Cpi_A_20251030_181546.csv")
getwd()
setwd(/Users/gerhardlaimer/Desktop)
setwd("/Users/gerhardlaimer/Desktop/dsml-seminar")
# ==========================
# 1) LOAD DATA
# ==========================
#load("~/Data")
data <- read.csv("US.Cpi_A_20251030_181546.csv")
getwd()
list.files
list.files()
library(flexdashboard)
library(shiny)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
options(scipen = 999)
options(bitmapType="cairo"); options(warn=-1)
# ==========================
# 1) LOAD DATA
# ==========================
#load("~/Data")
data <- read.csv("US.Cpi_A_20251030_181546.csv")
knitr::opts_knit$set(root.dir = getwd())
library(flexdashboard)
library(shiny)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
options(scipen = 999)
options(bitmapType="cairo"); options(warn=-1)
# ==========================
# 1) LOAD DATA
# ==========================
#load("~/Data")
data <- read.csv("US.Cpi_A_20251030_181546.csv")
```{r setup, include=FALSE}
setwd("~/Desktop/dsml-seminar")
library(flexdashboard)
library(shiny)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
options(scipen = 999)
options(bitmapType="cairo"); options(warn=-1)
# ==========================
# 1) LOAD DATA
# ==========================
#load("~/Data")
data <- read.csv("US.Cpi_A_20251030_181546.csv")
# vector of indicators
indicator <- data %>% select(-Economy, -Year) %>% names()
source("~/Desktop/dsml-seminar/getUnctadCPI.R", echo = TRUE)
clientId <- "70e80d59-00eb-4e26-b51e-c459d12aa6d8"
clientSecret <- "uFieZejhm91ftgBfktJdgZObAy79BdQeINHAt/h49zY="
cpi_index <- getUnctadCpiData(1950:2040, NULL, clientId, clientSecret, growthRate = TRUE)
head(cpi_index)
View(cpi_index)
library(flexdashboard)
library(shiny)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
options(scipen = 999)
options(bitmapType="cairo"); options(warn=-1)
clientId <- "70e80d59-00eb-4e26-b51e-c459d12aa6d8"
clientSecret <- "uFieZejhm91ftgBfktJdgZObAy79BdQeINHAt/h49zY="
source("getUnctadCPI.R")
if (file.exists("secrets.R")) source("secrets.R")
stopifnot(exists("clientId"), exists("clientSecret"))
cpi_dt <- getUnctadCpiData(
years        = 1990:2024,
economies    = NULL,                 # NULL = ALL economies
clientId     = clientId,
clientSecret = clientSecret,
growthRate   = FALSE                 # use index 2010 = 100
)
# --- normalize to template shape: Economy, Year, Cpi ---
data <- tibble::as_tibble(cpi_dt) |>
dplyr::transmute(
Economy = .data[["Economy.Label"]],
Year    = as.integer(.data[["Year"]]),
Cpi     = .data[["Index_Base_2010_Value"]]
) |>
dplyr::filter(!is.na(Economy), !is.na(Year), is.finite(Cpi)) |>
dplyr::arrange(Economy, Year)
# --- vectors & helpers (CPI-only) ---
indicator <- "Cpi"
economy   <- sort(unique(data$Economy))
clientId <- "70e80d59-00eb-4e26-b51e-c459d12aa6d8"
clientSecret <- "uFieZejhm91ftgBfktJdgZObAy79BdQeINHAt/h49zY="
# build_cpi_data.R
library(dplyr)
library(tibble)
source("getUnctadCPI.R")           # your function
source("getUnctadCPI.R")           # your function
source("secrets.R")                # defines clientId, clientSecret
# 1) Download CPI index (2010=100) for all economies (adjust years as needed)
cpi_dt <- getUnctadCpiData(
years        = 1990:2024,
economies    = NULL,             # NULL = all economies
clientId     = clientId,
clientSecret = clientSecret,
growthRate   = FALSE             # index level; the dashboard computes YoY
)
# 2) Normalize to the template’s shape
data <- as_tibble(cpi_dt) %>%      # IMPORTANT: object must be named 'data'
transmute(
Economy = .data[["Economy.Label"]],
Year    = as.integer(.data[["Year"]]),
Cpi     = .data[["Index_Base_2010_Value"]]
) %>%
filter(!is.na(Economy), !is.na(Year), is.finite(Cpi)) %>%
arrange(Economy, Year)
# 3) (Optional) Make the prof file work with zero edits
# If you truly want to run his Rmd UNCHANGED (it expects 'Gdp' and defaults to 'OutwardStock'),
# add placeholder columns so the app doesn't error:
data <- data %>%
mutate(
Gdp          = Cpi,    # placeholder so the GDP line draws instead of crashing
OutwardStock = Cpi     # placeholder so default selection "OutwardStock" exists
)
# 3) (Optional) Make the prof file work with zero edits
# If you truly want to run his Rmd UNCHANGED (it expects 'Gdp' and defaults to 'OutwardStock'),
# add placeholder columns so the app doesn't error:
class(data)
rm(list = ls())
source("getUnctadCPI.R")           # your function
source("secrets.R")                # defines clientId, clientSecret
# 1) Download CPI index (2010=100) for all economies (adjust years as needed)
cpi_dt <- getUnctadCpiData(
years        = 1990:2024,
economies    = NULL,             # NULL = all economies
clientId     = clientId,
clientSecret = clientSecret,
growthRate   = FALSE             # index level; the dashboard computes YoY
)
# 2) Normalize to the template’s shape
data <- as_tibble(cpi_dt) %>%      # IMPORTANT: object must be named 'data'
transmute(
Economy = .data[["Economy.Label"]],
Year    = as.integer(.data[["Year"]]),
Cpi     = .data[["Index_Base_2010_Value"]]
) %>%
filter(!is.na(Economy), !is.na(Year), is.finite(Cpi)) %>%
arrange(Economy, Year)
# 3) (Optional) Make the prof file work with zero edits
# If you truly want to run his Rmd UNCHANGED (it expects 'Gdp' and defaults to 'OutwardStock'),
# add placeholder columns so the app doesn't error:
class(data)
data <- data %>%
mutate(
Gdp          = Cpi,    # placeholder so the GDP line draws instead of crashing
OutwardStock = Cpi     # placeholder so default selection "OutwardStock" exists
)
